{"remainingRequest":"/Users/tomoki.tabo/Desktop/app/app/node_modules/babel-loader/lib/index.js!/Users/tomoki.tabo/Desktop/app/app/node_modules/eslint-loader/index.js??ref--14-0!/Users/tomoki.tabo/Desktop/app/app/tests/unit/example.spec.js","dependencies":[{"path":"/Users/tomoki.tabo/Desktop/app/app/tests/unit/example.spec.js","mtime":1587040700641},{"path":"/Users/tomoki.tabo/Desktop/app/app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tomoki.tabo/Desktop/app/app/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/tomoki.tabo/Desktop/app/app/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKdmFyIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQgPSByZXF1aXJlKCIvVXNlcnMvdG9tb2tpLnRhYm8vRGVza3RvcC9hcHAvYXBwL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2ludGVyb3BSZXF1aXJlRGVmYXVsdCIpOwoKdmFyIF9jaGFpID0gcmVxdWlyZSgiY2hhaSIpOwoKdmFyIF90ZXN0VXRpbHMgPSByZXF1aXJlKCJAdnVlL3Rlc3QtdXRpbHMiKTsKCnZhciBfSGVsbG9Xb3JsZCA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZSgiQC9jb21wb25lbnRzL0hlbGxvV29ybGQudnVlIikpOwoKZGVzY3JpYmUoJ0hlbGxvV29ybGQudnVlJywgKCkgPT4gewogIGl0KCdyZW5kZXJzIHByb3BzLm1zZyB3aGVuIHBhc3NlZCcsICgpID0+IHsKICAgIGNvbnN0IG1zZyA9ICduZXcgbWVzc2FnZSc7CiAgICBjb25zdCB3cmFwcGVyID0gKDAsIF90ZXN0VXRpbHMuc2hhbGxvd01vdW50KShfSGVsbG9Xb3JsZC5kZWZhdWx0LCB7CiAgICAgIHByb3BzRGF0YTogewogICAgICAgIG1zZwogICAgICB9CiAgICB9KTsKICAgICgwLCBfY2hhaS5leHBlY3QpKHdyYXBwZXIudGV4dCgpKS50by5pbmNsdWRlKG1zZyk7CiAgfSk7Cn0pOw=="},{"version":3,"sources":["/Users/tomoki.tabo/Desktop/app/app/tests/unit/example.spec.js"],"names":["describe","it","msg","wrapper","HelloWorld","propsData","text","to","include"],"mappings":";;;;AAAA;;AACA;;AACA;;AAEAA,QAAQ,CAAC,gBAAD,EAAmB,MAAM;AAC/BC,EAAAA,EAAE,CAAC,+BAAD,EAAkC,MAAM;AACxC,UAAMC,GAAG,GAAG,aAAZ;AACA,UAAMC,OAAO,GAAG,6BAAaC,mBAAb,EAAyB;AACvCC,MAAAA,SAAS,EAAE;AAAEH,QAAAA;AAAF;AAD4B,KAAzB,CAAhB;AAGA,sBAAOC,OAAO,CAACG,IAAR,EAAP,EAAuBC,EAAvB,CAA0BC,OAA1B,CAAkCN,GAAlC;AACD,GANC,CAAF;AAOD,CARO,CAAR","sourcesContent":["import { expect } from 'chai'\nimport { shallowMount } from '@vue/test-utils'\nimport HelloWorld from '@/components/HelloWorld.vue'\n\ndescribe('HelloWorld.vue', () => {\n  it('renders props.msg when passed', () => {\n    const msg = 'new message'\n    const wrapper = shallowMount(HelloWorld, {\n      propsData: { msg }\n    })\n    expect(wrapper.text()).to.include(msg)\n  })\n})\n"]}]}